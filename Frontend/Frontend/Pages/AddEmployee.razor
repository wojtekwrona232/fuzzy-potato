@page "/create-new"
@using System.Text
@using Newtonsoft.Json
@inject EmployeeService _employeeService
@inject NavigationManager _navigationManager

<div class="container">
    <div class="h3">Add new employee</div>
    
    <EditForm Model="NewEmployeeModel" OnValidSubmit="HandleCreate">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="row">
            <!-- Personal data form -->
            <div class="col-6">
                <div class="mt-2">
                    <div class="form-group">
                        <label for="firstName">First Name</label>
                        <InputText id="firstName" @bind-Value="NewEmployeeModel.FirstName" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="lastname">Last Name</label>
                        <InputText id="lastname" @bind-Value="NewEmployeeModel.LastName" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="phone">Phone number</label>
                        <InputText id="phone" @bind-Value="NewEmployeeModel.PhoneNumber" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="email">Email address</label>
                        <InputText id="email" @bind-Value="NewEmployeeModel.Email" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="dob">Date of birth</label>
                        <InputDate id="dob" @bind-Value="NewEmployeeModel.DateOfBirth" class="form-control"></InputDate>
                    </div>
                    <div class="form-group">
                        <label for="Gender">Gender</label>
                        <InputSelect id="Gender" @bind-Value="NewEmployeeModel.Gender" class="form-control">
                            @foreach (var gender in GenderOptions.Gender)
                            {
                                <option value="@gender">@gender</option>
                            }
                        </InputSelect>
                        @if (NewEmployeeModel.Gender == "Other")
                        {
                            <label for="GenderText">Gender</label>
                            <InputText id="GenderText" @bind-Value="NewEmployeeModel.GenderInput" class="form-control"></InputText>
                        }
                    </div>
                </div>
            </div>
            <!-- Address form -->
            <div class="col-6">
                <div class="mt-2">
                    <div class="form-group">
                        <label for="street">Street address</label>
                        <InputText id="street" @bind-Value="NewEmployeeModel.Street" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="zip">Zip code</label>
                        <InputText id="zip" @bind-Value="NewEmployeeModel.ZipCode" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="city">City name</label>
                        <InputText id="city" @bind-Value="NewEmployeeModel.City" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="region">Region name</label>
                        <InputText id="region" @bind-Value="NewEmployeeModel.Region" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="country">Country name</label>
                        <InputText id="country" @bind-Value="NewEmployeeModel.Country" class="form-control"></InputText>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-5 mt-5">
            <div class="col-6">
                <div class="mt-2">
                    <div class="form-group">
                        <label for="position">Position at the office</label>
                        <InputText id="position" @bind-Value="NewEmployeeModel.Position" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="salary">Salary</label>
                        <InputNumber id="salary" @bind-Value="NewEmployeeModel.Salary" class="form-control"></InputNumber>
                    </div>
                </div>
            </div>

            <div class="col-6">
                <div class="mt-2">
                    <div class="form-group">
                        <label for="hire">Hiring data</label>
                        <InputDate id="hire" @bind-Value="NewEmployeeModel.DateOfHire" class="form-control"></InputDate>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-6">
                <div class="mt-2">
                    <button type="submit" class="btn btn-primary">Create new employee</button>
                </div>
            </div>
        </div>
    </EditForm>
    
</div>

@code {
    private NewEmployeeModel NewEmployeeModel { get; } = new();

    async void HandleCreate()
    {
        var response = await _employeeService.CreateNew(NewEmployeeModel);
        if (!response.IsSuccessStatusCode) return;
        var resp = await response.Content.ReadAsByteArrayAsync();
        var respBuffer = Encoding.UTF8.GetString(resp);
        var emp = JsonConvert.DeserializeObject<Employee>(respBuffer);
        if(emp != null)
        {
            _navigationManager.NavigateTo($"/details/{emp.Id}");
        }
    }

}